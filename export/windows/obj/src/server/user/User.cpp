// Generated by Haxe 4.3.2
#include <hxcpp.h>

#ifndef INCLUDED_server_user_User
#include <server/user/User.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_5d76755f5c4ae554_6_new,"server.user.User","new",0x0e101075,"server.user.User.new","server/user/User.hx",6,0x680d643b)
namespace server{
namespace user{

void User_obj::__construct(::String username){
            	HX_STACKFRAME(&_hx_pos_5d76755f5c4ae554_6_new)
HXDLIN(   6)		this->username = username;
            	}

Dynamic User_obj::__CreateEmpty() { return new User_obj; }

void *User_obj::_hx_vtable = 0;

Dynamic User_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< User_obj > _hx_result = new User_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool User_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x228d1679;
}


User_obj::User_obj()
{
}

void User_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(User);
	HX_MARK_MEMBER_NAME(username,"username");
	HX_MARK_END_CLASS();
}

void User_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(username,"username");
}

::hx::Val User_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 8:
		if (HX_FIELD_EQ(inName,"username") ) { return ::hx::Val( username ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val User_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 8:
		if (HX_FIELD_EQ(inName,"username") ) { username=inValue.Cast< ::String >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void User_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("username",16,86,eb,20));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo User_obj_sMemberStorageInfo[] = {
	{::hx::fsString,(int)offsetof(User_obj,username),HX_("username",16,86,eb,20)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *User_obj_sStaticStorageInfo = 0;
#endif

static ::String User_obj_sMemberFields[] = {
	HX_("username",16,86,eb,20),
	::String(null()) };

::hx::Class User_obj::__mClass;

void User_obj::__register()
{
	User_obj _hx_dummy;
	User_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("server.user.User",03,b2,5f,c6);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(User_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< User_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = User_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = User_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace server
} // end namespace user

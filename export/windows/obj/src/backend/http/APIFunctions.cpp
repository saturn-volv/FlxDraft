// Generated by Haxe 4.3.2
#include <hxcpp.h>

#ifndef INCLUDED_backend_http_APIFunctions
#include <backend/http/APIFunctions.h>
#endif
#ifndef INCLUDED_haxe_Exception
#include <haxe/Exception.h>
#endif
#ifndef INCLUDED_haxe_http_HttpBase
#include <haxe/http/HttpBase.h>
#endif
#ifndef INCLUDED_sys_Http
#include <sys/Http.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_0737259f194fc4f7_13___default_requestFromURL,"backend.http.APIFunctions","__default_requestFromURL",0x83480ef5,"backend.http.APIFunctions.__default_requestFromURL","backend/http/APIFunctions.hx",13,0x0334b431)
namespace backend{
namespace http{

void APIFunctions_obj::__construct() { }

Dynamic APIFunctions_obj::__CreateEmpty() { return new APIFunctions_obj; }

void *APIFunctions_obj::_hx_vtable = 0;

Dynamic APIFunctions_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< APIFunctions_obj > _hx_result = new APIFunctions_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool APIFunctions_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x195d6df9;
}

HX_BEGIN_DEFAULT_FUNC(__default_requestFromURL,APIFunctions_obj)
::String _hx_run(::String url){
            	HX_STACKFRAME(&_hx_pos_0737259f194fc4f7_13___default_requestFromURL)
HXDLIN(  13)		try {
            			HX_STACK_CATCHABLE( ::Dynamic, 0);
HXLINE(  14)			return ::sys::Http_obj::requestUrl(url);
            		} catch( ::Dynamic _hx_e) {
            			if (_hx_e.IsClass<  ::Dynamic >() ){
            				HX_STACK_BEGIN_CATCH
            				 ::Dynamic _g = _hx_e;
HXLINE(  15)				 ::haxe::Exception e = ::haxe::Exception_obj::caught(_g);
HXLINE(  16)				return ::sys::Http_obj::requestUrl(HX_("https://api.scryfall.com/cards/named?fuzzy=flbthp-the-lost",a1,53,8c,72));
            			}
            			else {
            				HX_STACK_DO_THROW(_hx_e);
            			}
            		}
HXLINE(  13)		return null();
            	}
HX_END_LOCAL_FUNC1(return )
HX_END_DEFAULT_FUNC

::Dynamic APIFunctions_obj::requestFromURL;


APIFunctions_obj::APIFunctions_obj()
{
}

bool APIFunctions_obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 14:
		if (HX_FIELD_EQ(inName,"requestFromURL") ) { outValue = ( requestFromURL ); return true; }
	}
	return false;
}

bool APIFunctions_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 14:
		if (HX_FIELD_EQ(inName,"requestFromURL") ) { requestFromURL=ioValue.Cast<  ::Dynamic >(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *APIFunctions_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo APIFunctions_obj_sStaticStorageInfo[] = {
	{::hx::fsObject /*  ::Dynamic */ ,(void *) &APIFunctions_obj::requestFromURL,HX_("requestFromURL",96,40,4b,d1)},
	{ ::hx::fsUnknown, 0, null()}
};
#endif

static void APIFunctions_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(APIFunctions_obj::requestFromURL,"requestFromURL");
};

#ifdef HXCPP_VISIT_ALLOCS
static void APIFunctions_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(APIFunctions_obj::requestFromURL,"requestFromURL");
};

#endif

::hx::Class APIFunctions_obj::__mClass;

static ::String APIFunctions_obj_sStaticFields[] = {
	HX_("requestFromURL",96,40,4b,d1),
	::String(null())
};

void APIFunctions_obj::__register()
{
	APIFunctions_obj _hx_dummy;
	APIFunctions_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("backend.http.APIFunctions",4d,0c,9f,84);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &APIFunctions_obj::__GetStatic;
	__mClass->mSetStaticField = &APIFunctions_obj::__SetStatic;
	__mClass->mMarkFunc = APIFunctions_obj_sMarkStatics;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(APIFunctions_obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< APIFunctions_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = APIFunctions_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = APIFunctions_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = APIFunctions_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void APIFunctions_obj::__boot()
{
	requestFromURL = new __default_requestFromURL;

}

} // end namespace backend
} // end namespace http

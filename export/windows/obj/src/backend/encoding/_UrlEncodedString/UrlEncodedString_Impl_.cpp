// Generated by Haxe 4.3.2
#include <hxcpp.h>

#ifndef INCLUDED_backend_encoding_ParentEncoding
#include <backend/encoding/ParentEncoding.h>
#endif
#ifndef INCLUDED_backend_encoding__UrlEncodedString_UrlEncodedString_Impl_
#include <backend/encoding/_UrlEncodedString/UrlEncodedString_Impl_.h>
#endif
#ifndef INCLUDED_haxe_IMap
#include <haxe/IMap.h>
#endif
#ifndef INCLUDED_haxe_ds_StringMap
#include <haxe/ds/StringMap.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_8896df66361cc2bc_5__new,"backend.encoding._UrlEncodedString.UrlEncodedString_Impl_","_new",0x33d8879f,"backend.encoding._UrlEncodedString.UrlEncodedString_Impl_._new","backend/encoding/UrlEncodedString.hx",5,0x44b4562d)
namespace backend{
namespace encoding{
namespace _UrlEncodedString{

void UrlEncodedString_Impl__obj::__construct() { }

Dynamic UrlEncodedString_Impl__obj::__CreateEmpty() { return new UrlEncodedString_Impl__obj; }

void *UrlEncodedString_Impl__obj::_hx_vtable = 0;

Dynamic UrlEncodedString_Impl__obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< UrlEncodedString_Impl__obj > _hx_result = new UrlEncodedString_Impl__obj();
	_hx_result->__construct();
	return _hx_result;
}

bool UrlEncodedString_Impl__obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x5275a1d8;
}

::String UrlEncodedString_Impl__obj::_new(::String str){
            	HX_STACKFRAME(&_hx_pos_8896df66361cc2bc_5__new)
HXLINE(   6)		::Array< ::String > chars = ::Array_obj< ::String >::__new(0);
HXLINE(   7)		{
HXLINE(   7)			int _g = 0;
HXDLIN(   7)			::Array< ::String > _g1 = str.split(HX_("",00,00,00,00));
HXDLIN(   7)			while((_g < _g1->length)){
HXLINE(   7)				::String _hx_char = _g1->__get(_g);
HXDLIN(   7)				_g = (_g + 1);
HXLINE(   8)				if (::backend::encoding::ParentEncoding_obj::RESERVED_CHARACTERS->exists(_hx_char)) {
HXLINE(   8)					chars->push(::backend::encoding::ParentEncoding_obj::RESERVED_CHARACTERS->get_string(_hx_char));
            				}
            				else {
HXLINE(   9)					chars->push(_hx_char);
            				}
            			}
            		}
HXLINE(   5)		return chars->join(HX_("",00,00,00,00));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(UrlEncodedString_Impl__obj,_new,return )


UrlEncodedString_Impl__obj::UrlEncodedString_Impl__obj()
{
}

bool UrlEncodedString_Impl__obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"_new") ) { outValue = _new_dyn(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *UrlEncodedString_Impl__obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *UrlEncodedString_Impl__obj_sStaticStorageInfo = 0;
#endif

::hx::Class UrlEncodedString_Impl__obj::__mClass;

static ::String UrlEncodedString_Impl__obj_sStaticFields[] = {
	HX_("_new",61,15,1f,3f),
	::String(null())
};

void UrlEncodedString_Impl__obj::__register()
{
	UrlEncodedString_Impl__obj _hx_dummy;
	UrlEncodedString_Impl__obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("backend.encoding._UrlEncodedString.UrlEncodedString_Impl_",f0,16,cc,13);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &UrlEncodedString_Impl__obj::__GetStatic;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(UrlEncodedString_Impl__obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< UrlEncodedString_Impl__obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = UrlEncodedString_Impl__obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = UrlEncodedString_Impl__obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace backend
} // end namespace encoding
} // end namespace _UrlEncodedString

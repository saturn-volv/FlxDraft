// Generated by Haxe 4.3.2
#include <hxcpp.h>

#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_backend_http_APIFunctions
#include <backend/http/APIFunctions.h>
#endif
#ifndef INCLUDED_haxe_format_JsonParser
#include <haxe/format/JsonParser.h>
#endif
#ifndef INCLUDED_scryfall_Card
#include <scryfall/Card.h>
#endif
#ifndef INCLUDED_scryfall_List
#include <scryfall/List.h>
#endif
#ifndef INCLUDED_scryfall_Result
#include <scryfall/Result.h>
#endif
#ifndef INCLUDED_scryfall_Set
#include <scryfall/Set.h>
#endif
#ifndef INCLUDED_scryfall_search_ScrySearch
#include <scryfall/search/ScrySearch.h>
#endif
#ifndef INCLUDED_scryfall_search_cards_QuerySearchResult
#include <scryfall/search/cards/QuerySearchResult.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_39c115f80e6ec84d_20_searchSet,"scryfall.search.ScrySearch","searchSet",0xcd0943d5,"scryfall.search.ScrySearch.searchSet","scryfall/search/ScrySearch.hx",20,0xc1a00cd5)
HX_LOCAL_STACK_FRAME(_hx_pos_39c115f80e6ec84d_26_getSets,"scryfall.search.ScrySearch","getSets",0x29a68c42,"scryfall.search.ScrySearch.getSets","scryfall/search/ScrySearch.hx",26,0xc1a00cd5)
HX_LOCAL_STACK_FRAME(_hx_pos_39c115f80e6ec84d_36_fuzzySearchCard,"scryfall.search.ScrySearch","fuzzySearchCard",0x76a97ebd,"scryfall.search.ScrySearch.fuzzySearchCard","scryfall/search/ScrySearch.hx",36,0xc1a00cd5)
HX_LOCAL_STACK_FRAME(_hx_pos_39c115f80e6ec84d_40_exactSearchCard,"scryfall.search.ScrySearch","exactSearchCard",0xed5ea5f2,"scryfall.search.ScrySearch.exactSearchCard","scryfall/search/ScrySearch.hx",40,0xc1a00cd5)
HX_LOCAL_STACK_FRAME(_hx_pos_39c115f80e6ec84d_45_searchCard,"scryfall.search.ScrySearch","searchCard",0x907ba23d,"scryfall.search.ScrySearch.searchCard","scryfall/search/ScrySearch.hx",45,0xc1a00cd5)
HX_LOCAL_STACK_FRAME(_hx_pos_39c115f80e6ec84d_54_randomCard,"scryfall.search.ScrySearch","randomCard",0xd3180e58,"scryfall.search.ScrySearch.randomCard","scryfall/search/ScrySearch.hx",54,0xc1a00cd5)
HX_LOCAL_STACK_FRAME(_hx_pos_39c115f80e6ec84d_58_queryCard,"scryfall.search.ScrySearch","queryCard",0xf309f7b3,"scryfall.search.ScrySearch.queryCard","scryfall/search/ScrySearch.hx",58,0xc1a00cd5)
HX_LOCAL_STACK_FRAME(_hx_pos_39c115f80e6ec84d_71_getCardFromURL,"scryfall.search.ScrySearch","getCardFromURL",0x62f152a4,"scryfall.search.ScrySearch.getCardFromURL","scryfall/search/ScrySearch.hx",71,0xc1a00cd5)
HX_LOCAL_STACK_FRAME(_hx_pos_39c115f80e6ec84d_79_getCardListFromURL,"scryfall.search.ScrySearch","getCardListFromURL",0x62757166,"scryfall.search.ScrySearch.getCardListFromURL","scryfall/search/ScrySearch.hx",79,0xc1a00cd5)
HX_LOCAL_STACK_FRAME(_hx_pos_39c115f80e6ec84d_81_getList,"scryfall.search.ScrySearch","getList",0x2509160f,"scryfall.search.ScrySearch.getList","scryfall/search/ScrySearch.hx",81,0xc1a00cd5)
namespace scryfall{
namespace search{

void ScrySearch_obj::__construct() { }

Dynamic ScrySearch_obj::__CreateEmpty() { return new ScrySearch_obj; }

void *ScrySearch_obj::_hx_vtable = 0;

Dynamic ScrySearch_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< ScrySearch_obj > _hx_result = new ScrySearch_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool ScrySearch_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x1dad8839;
}

 ::scryfall::Set ScrySearch_obj::searchSet(::String code){
            	HX_GC_STACKFRAME(&_hx_pos_39c115f80e6ec84d_20_searchSet)
HXLINE(  21)		::String urlBuild = (HX_("https://api.scryfall.com/sets/",37,a5,09,1a) + code);
HXLINE(  22)		::String data = ( (::String)(::backend::http::APIFunctions_obj::requestFromURL(urlBuild)) );
HXLINE(  23)		 ::Dynamic setObject =  ::haxe::format::JsonParser_obj::__alloc( HX_CTX ,data)->doParse();
HXLINE(  24)		return  ::scryfall::Set_obj::__alloc( HX_CTX ,setObject);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(ScrySearch_obj,searchSet,return )

::Array< ::Dynamic> ScrySearch_obj::getSets(){
            	HX_GC_STACKFRAME(&_hx_pos_39c115f80e6ec84d_26_getSets)
HXLINE(  27)		::String urlBuild = HX_("https://api.scryfall.com/sets",f8,d3,cf,3b);
HXLINE(  28)		::String data = ( (::String)(::backend::http::APIFunctions_obj::requestFromURL(urlBuild)) );
HXLINE(  29)		::Array< ::Dynamic> setArray = ::Array_obj< ::Dynamic>::__new(0);
HXLINE(  30)		{
HXLINE(  30)			int _g = 0;
HXDLIN(  30)			::cpp::VirtualArray _g1 = ::hx::TCast< ::cpp::VirtualArray >::cast( ::Dynamic( ::haxe::format::JsonParser_obj::__alloc( HX_CTX ,data)->doParse()->__Field(HX_("data",2a,56,63,42),::hx::paccDynamic)));
HXDLIN(  30)			while((_g < _g1->get_length())){
HXLINE(  30)				 ::Dynamic setObj = _g1->__get(_g);
HXDLIN(  30)				_g = (_g + 1);
HXLINE(  31)				setArray->push( ::scryfall::Set_obj::__alloc( HX_CTX ,setObj));
            			}
            		}
HXLINE(  34)		return setArray;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(ScrySearch_obj,getSets,return )

 ::scryfall::Card ScrySearch_obj::fuzzySearchCard(::String search, ::Dynamic params){
            	HX_STACKFRAME(&_hx_pos_39c115f80e6ec84d_36_fuzzySearchCard)
HXLINE(  37)		::String urlBuild = (HX_("https://api.scryfall.com/cards/named?fuzzy=",ec,23,c6,5f) + search);
HXLINE(  38)		return ::scryfall::search::ScrySearch_obj::searchCard(urlBuild,params);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(ScrySearch_obj,fuzzySearchCard,return )

 ::scryfall::Card ScrySearch_obj::exactSearchCard(::String search, ::Dynamic params){
            	HX_STACKFRAME(&_hx_pos_39c115f80e6ec84d_40_exactSearchCard)
HXLINE(  41)		::String urlBuild = (HX_("https://api.scryfall.com/cards/named?exact=",57,b7,06,a3) + search);
HXLINE(  42)		return ::scryfall::search::ScrySearch_obj::searchCard(urlBuild,params);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(ScrySearch_obj,exactSearchCard,return )

 ::scryfall::Card ScrySearch_obj::searchCard(::String url, ::Dynamic params){
            	HX_STACKFRAME(&_hx_pos_39c115f80e6ec84d_45_searchCard)
HXLINE(  46)		::String urlBuild = url;
HXLINE(  47)		if (::hx::IsNotNull( params )) {
HXLINE(  48)			if (::hx::IsNotNull( params->__Field(HX_("set",a2,9b,57,00),::hx::paccDynamic) )) {
HXLINE(  48)				urlBuild = ( (::String)((urlBuild + (HX_("&set=",81,9d,8a,2d) + params->__Field(HX_("set",a2,9b,57,00),::hx::paccDynamic)))) );
            			}
HXLINE(  49)			if (::hx::IsNotNull( params->__Field(HX_("backface",44,2e,dc,1b),::hx::paccDynamic) )) {
HXLINE(  49)				::String urlBuild1;
HXDLIN(  49)				if (( (bool)(params->__Field(HX_("backface",44,2e,dc,1b),::hx::paccDynamic)) )) {
HXLINE(  49)					urlBuild1 = HX_("&face=back",41,7a,b5,1a);
            				}
            				else {
HXLINE(  49)					urlBuild1 = HX_("",00,00,00,00);
            				}
HXDLIN(  49)				urlBuild = (urlBuild + urlBuild1);
            			}
HXLINE(  50)			if (::hx::IsNotNull( params->__Field(HX_("version",18,e7,f1,7c),::hx::paccDynamic) )) {
HXLINE(  50)				urlBuild = (urlBuild + (HX_("&version=",4b,e4,8d,26) + ::Std_obj::string( ::Dynamic(params->__Field(HX_("version",18,e7,f1,7c),::hx::paccDynamic)))));
            			}
            		}
HXLINE(  52)		return ::scryfall::search::ScrySearch_obj::getCardFromURL(urlBuild);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(ScrySearch_obj,searchCard,return )

 ::scryfall::Card ScrySearch_obj::randomCard(::String query){
            	HX_STACKFRAME(&_hx_pos_39c115f80e6ec84d_54_randomCard)
HXLINE(  55)		::String urlBuild = (HX_("https://api.scryfall.com/cards/random?q=",d5,b0,09,da) + query);
HXLINE(  56)		return ::scryfall::search::ScrySearch_obj::getCardFromURL(urlBuild);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(ScrySearch_obj,randomCard,return )

 ::scryfall::search::cards::QuerySearchResult ScrySearch_obj::queryCard(::String query, ::Dynamic params){
            	HX_GC_STACKFRAME(&_hx_pos_39c115f80e6ec84d_58_queryCard)
HXLINE(  59)		::String urlBuild = (HX_("https://api.scryfall.com/cards/search?q=",90,e0,0f,22) + query);
HXLINE(  60)		if (::hx::IsNotNull( params )) {
HXLINE(  61)			if (::hx::IsNotNull( params->__Field(HX_("unique",11,93,92,63),::hx::paccDynamic) )) {
HXLINE(  61)				urlBuild = ( (::String)((urlBuild + (HX_("&unique=",a6,0c,2b,3a) + params->__Field(HX_("unique",11,93,92,63),::hx::paccDynamic)))) );
            			}
HXLINE(  62)			if (::hx::IsNotNull( params->__Field(HX_("order",8e,f0,20,35),::hx::paccDynamic) )) {
HXLINE(  62)				urlBuild = ( (::String)((urlBuild + (HX_("&order=",95,2c,e1,73) + params->__Field(HX_("order",8e,f0,20,35),::hx::paccDynamic)))) );
            			}
HXLINE(  63)			if (::hx::IsNotNull( params->__Field(HX_("dir",4d,3d,4c,00),::hx::paccDynamic) )) {
HXLINE(  63)				urlBuild = ( (::String)((urlBuild + (HX_("&dir=",76,71,a3,23) + params->__Field(HX_("dir",4d,3d,4c,00),::hx::paccDynamic)))) );
            			}
HXLINE(  64)			if (::hx::IsNotNull( params->__Field(HX_("include_extras",5a,4c,82,ab),::hx::paccDynamic) )) {
HXLINE(  64)				urlBuild = (urlBuild + (HX_("&include_extras=",3d,9d,a6,f7) + ::Std_obj::string( ::Dynamic(params->__Field(HX_("include_extras",5a,4c,82,ab),::hx::paccDynamic)))));
            			}
HXLINE(  65)			if (::hx::IsNotNull( params->__Field(HX_("include_multilingual",c8,64,36,a2),::hx::paccDynamic) )) {
HXLINE(  65)				urlBuild = (urlBuild + (HX_("&include_multilingual=",8f,d4,00,71) + ::Std_obj::string( ::Dynamic(params->__Field(HX_("include_multilingual",c8,64,36,a2),::hx::paccDynamic)))));
            			}
HXLINE(  66)			if (::hx::IsNotNull( params->__Field(HX_("include_variations",37,8d,66,9c),::hx::paccDynamic) )) {
HXLINE(  66)				urlBuild = (urlBuild + (HX_("&include_variations=",c0,72,45,70) + ::Std_obj::string( ::Dynamic(params->__Field(HX_("include_variations",37,8d,66,9c),::hx::paccDynamic)))));
            			}
            		}
HXLINE(  68)		return  ::scryfall::search::cards::QuerySearchResult_obj::__alloc( HX_CTX ,urlBuild);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(ScrySearch_obj,queryCard,return )

 ::scryfall::Card ScrySearch_obj::getCardFromURL(::String url){
            	HX_GC_STACKFRAME(&_hx_pos_39c115f80e6ec84d_71_getCardFromURL)
HXLINE(  72)		::String data = ( (::String)(::backend::http::APIFunctions_obj::requestFromURL(url)) );
HXLINE(  73)		 ::Dynamic jsonData =  ::haxe::format::JsonParser_obj::__alloc( HX_CTX ,data)->doParse();
HXLINE(  74)		 ::scryfall::Card card =  ::scryfall::Card_obj::__alloc( HX_CTX ,jsonData);
HXLINE(  76)		return card;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(ScrySearch_obj,getCardFromURL,return )

 ::scryfall::List ScrySearch_obj::getCardListFromURL(::String url){
            	HX_STACKFRAME(&_hx_pos_39c115f80e6ec84d_79_getCardListFromURL)
HXDLIN(  79)		return ::scryfall::search::ScrySearch_obj::getList(url);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(ScrySearch_obj,getCardListFromURL,return )

 ::scryfall::List ScrySearch_obj::getList(::String url){
            	HX_GC_STACKFRAME(&_hx_pos_39c115f80e6ec84d_81_getList)
HXLINE(  82)		::String data = ( (::String)(::backend::http::APIFunctions_obj::requestFromURL(url)) );
HXLINE(  83)		return  ::scryfall::List_obj::__alloc( HX_CTX , ::haxe::format::JsonParser_obj::__alloc( HX_CTX ,data)->doParse());
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(ScrySearch_obj,getList,return )


ScrySearch_obj::ScrySearch_obj()
{
}

bool ScrySearch_obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 7:
		if (HX_FIELD_EQ(inName,"getSets") ) { outValue = getSets_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getList") ) { outValue = getList_dyn(); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"searchSet") ) { outValue = searchSet_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"queryCard") ) { outValue = queryCard_dyn(); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"searchCard") ) { outValue = searchCard_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"randomCard") ) { outValue = randomCard_dyn(); return true; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"getCardFromURL") ) { outValue = getCardFromURL_dyn(); return true; }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"fuzzySearchCard") ) { outValue = fuzzySearchCard_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"exactSearchCard") ) { outValue = exactSearchCard_dyn(); return true; }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"getCardListFromURL") ) { outValue = getCardListFromURL_dyn(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *ScrySearch_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *ScrySearch_obj_sStaticStorageInfo = 0;
#endif

::hx::Class ScrySearch_obj::__mClass;

static ::String ScrySearch_obj_sStaticFields[] = {
	HX_("searchSet",1a,45,53,ef),
	HX_("getSets",47,42,d3,1e),
	HX_("fuzzySearchCard",c2,41,33,37),
	HX_("exactSearchCard",f7,68,e8,ad),
	HX_("searchCard",58,bd,f2,6e),
	HX_("randomCard",73,29,8f,b1),
	HX_("queryCard",f8,f8,53,15),
	HX_("getCardFromURL",3f,97,63,a6),
	HX_("getCardListFromURL",81,9f,75,c5),
	HX_("getList",14,cc,35,1a),
	::String(null())
};

void ScrySearch_obj::__register()
{
	ScrySearch_obj _hx_dummy;
	ScrySearch_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("scryfall.search.ScrySearch",69,b7,af,e5);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &ScrySearch_obj::__GetStatic;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(ScrySearch_obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< ScrySearch_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = ScrySearch_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = ScrySearch_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace scryfall
} // end namespace search

// Generated by Haxe 4.3.2
#include <hxcpp.h>

#ifndef INCLUDED_scryfall_Card
#include <scryfall/Card.h>
#endif
#ifndef INCLUDED_scryfall_List
#include <scryfall/List.h>
#endif
#ifndef INCLUDED_scryfall_Result
#include <scryfall/Result.h>
#endif
#ifndef INCLUDED_scryfall_search_ScrySearch
#include <scryfall/search/ScrySearch.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_45146d95bc3de004_15_new,"scryfall.List","new",0x3d85040c,"scryfall.List.new","scryfall/List.hx",15,0x3ceab303)
HX_LOCAL_STACK_FRAME(_hx_pos_45146d95bc3de004_18_get_nextList,"scryfall.List","get_nextList",0xc5326dce,"scryfall.List.get_nextList","scryfall/List.hx",18,0x3ceab303)
namespace scryfall{

void List_obj::__construct( ::Dynamic object){
            	HX_GC_STACKFRAME(&_hx_pos_45146d95bc3de004_15_new)
HXLINE(  16)		this->results = ::Array_obj< ::Dynamic>::__new(0);
HXLINE(  25)		super::__construct(object);
HXLINE(  26)		{
HXLINE(  26)			int _g = 0;
HXDLIN(  26)			::cpp::VirtualArray _g1 = ( (::cpp::VirtualArray)(object->__Field(HX_("data",2a,56,63,42),::hx::paccDynamic)) );
HXDLIN(  26)			while((_g < _g1->get_length())){
HXLINE(  26)				 ::Dynamic value = _g1->__get(_g);
HXDLIN(  26)				_g = (_g + 1);
HXLINE(  27)				::Array< ::Dynamic> _hx_tmp = this->results;
HXDLIN(  27)				_hx_tmp->push( ::scryfall::Card_obj::__alloc( HX_CTX ,value));
            			}
            		}
            	}

Dynamic List_obj::__CreateEmpty() { return new List_obj; }

void *List_obj::_hx_vtable = 0;

Dynamic List_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< List_obj > _hx_result = new List_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool List_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x593034cf) {
		return inClassId==(int)0x00000001 || inClassId==(int)0x593034cf;
	} else {
		return inClassId==(int)0x7f8fa7d0;
	}
}

 ::scryfall::List List_obj::get_nextList(){
            	HX_STACKFRAME(&_hx_pos_45146d95bc3de004_18_get_nextList)
HXLINE(  20)		if (::hx::IsNotNull( this->_struct->__Field(HX_("next_page",5b,a0,7a,11),::hx::paccDynamic) )) {
HXLINE(  21)			return ::scryfall::search::ScrySearch_obj::getList(( (::String)(this->_struct->__Field(HX_("next_page",5b,a0,7a,11),::hx::paccDynamic)) ));
            		}
HXLINE(  22)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC0(List_obj,get_nextList,return )


::hx::ObjectPtr< List_obj > List_obj::__new( ::Dynamic object) {
	::hx::ObjectPtr< List_obj > __this = new List_obj();
	__this->__construct(object);
	return __this;
}

::hx::ObjectPtr< List_obj > List_obj::__alloc(::hx::Ctx *_hx_ctx, ::Dynamic object) {
	List_obj *__this = (List_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(List_obj), true, "scryfall.List"));
	*(void **)__this = List_obj::_hx_vtable;
	__this->__construct(object);
	return __this;
}

List_obj::List_obj()
{
}

void List_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(List);
	HX_MARK_MEMBER_NAME(results,"results");
	HX_MARK_MEMBER_NAME(nextList,"nextList");
	 ::scryfall::Result_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void List_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(results,"results");
	HX_VISIT_MEMBER_NAME(nextList,"nextList");
	 ::scryfall::Result_obj::__Visit(HX_VISIT_ARG);
}

::hx::Val List_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 7:
		if (HX_FIELD_EQ(inName,"results") ) { return ::hx::Val( results ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"nextList") ) { return ::hx::Val( inCallProp == ::hx::paccAlways ? get_nextList() : nextList ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"get_nextList") ) { return ::hx::Val( get_nextList_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val List_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 7:
		if (HX_FIELD_EQ(inName,"results") ) { results=inValue.Cast< ::Array< ::Dynamic> >(); return inValue; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"nextList") ) { nextList=inValue.Cast<  ::scryfall::List >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void List_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("results",f6,58,57,6b));
	outFields->push(HX_("nextList",f1,c2,7f,f3));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo List_obj_sMemberStorageInfo[] = {
	{::hx::fsObject /* ::Array< ::Dynamic> */ ,(int)offsetof(List_obj,results),HX_("results",f6,58,57,6b)},
	{::hx::fsObject /*  ::scryfall::List */ ,(int)offsetof(List_obj,nextList),HX_("nextList",f1,c2,7f,f3)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *List_obj_sStaticStorageInfo = 0;
#endif

static ::String List_obj_sMemberFields[] = {
	HX_("results",f6,58,57,6b),
	HX_("nextList",f1,c2,7f,f3),
	HX_("get_nextList",fa,76,99,a8),
	::String(null()) };

::hx::Class List_obj::__mClass;

void List_obj::__register()
{
	List_obj _hx_dummy;
	List_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("scryfall.List",1a,4e,9f,29);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(List_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< List_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = List_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = List_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace scryfall

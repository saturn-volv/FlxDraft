// Generated by Haxe 4.3.2
#ifndef INCLUDED_scryfall_cards_CardSearch
#define INCLUDED_scryfall_cards_CardSearch

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(scryfall,cards,CardSearch)

namespace scryfall{
namespace cards{


class HXCPP_CLASS_ATTRIBUTES CardSearch_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef CardSearch_obj OBJ_;
		CardSearch_obj();

	public:
		enum { _hx_ClassId = 0x1969061d };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="scryfall.cards.CardSearch")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"scryfall.cards.CardSearch"); }

		inline static ::hx::ObjectPtr< CardSearch_obj > __new() {
			::hx::ObjectPtr< CardSearch_obj > __this = new CardSearch_obj();
			__this->__construct();
			return __this;
		}

		inline static ::hx::ObjectPtr< CardSearch_obj > __alloc(::hx::Ctx *_hx_ctx) {
			CardSearch_obj *__this = (CardSearch_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(CardSearch_obj), false, "scryfall.cards.CardSearch"));
			*(void **)__this = CardSearch_obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~CardSearch_obj();

		HX_DO_RTTI_ALL;
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("CardSearch",78,71,5b,8f); }

};

} // end namespace scryfall
} // end namespace cards

#endif /* INCLUDED_scryfall_cards_CardSearch */ 

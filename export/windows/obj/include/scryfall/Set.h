// Generated by Haxe 4.3.2
#ifndef INCLUDED_scryfall_Set
#define INCLUDED_scryfall_Set

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_scryfall_Result
#include <scryfall/Result.h>
#endif
HX_DECLARE_STACK_FRAME(_hx_pos_75438f01b50f293f_14_new)
HX_DECLARE_CLASS1(scryfall,Result)
HX_DECLARE_CLASS1(scryfall,Set)

namespace scryfall{


class HXCPP_CLASS_ATTRIBUTES Set_obj : public  ::scryfall::Result_obj
{
	public:
		typedef  ::scryfall::Result_obj super;
		typedef Set_obj OBJ_;
		Set_obj();

	public:
		enum { _hx_ClassId = 0x4f2ef4c4 };

		void __construct( ::Dynamic obj);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="scryfall.Set")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"scryfall.Set"); }

		inline static ::hx::ObjectPtr< Set_obj > __new( ::Dynamic obj) {
			::hx::ObjectPtr< Set_obj > __this = new Set_obj();
			__this->__construct(obj);
			return __this;
		}

		inline static ::hx::ObjectPtr< Set_obj > __alloc(::hx::Ctx *_hx_ctx, ::Dynamic obj) {
			Set_obj *__this = (Set_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(Set_obj), true, "scryfall.Set"));
			*(void **)__this = Set_obj::_hx_vtable;
{
            	HX_STACKFRAME(&_hx_pos_75438f01b50f293f_14_new)
HXDLIN(  14)		__this->super::__construct(obj);
            	}
		
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~Set_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("Set",82,53,3f,00); }

		::String get_name();
		::Dynamic get_name_dyn();

		::String get_setCode();
		::Dynamic get_setCode_dyn();

};

} // end namespace scryfall

#endif /* INCLUDED_scryfall_Set */ 

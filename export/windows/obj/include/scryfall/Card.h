// Generated by Haxe 4.3.2
#ifndef INCLUDED_scryfall_Card
#define INCLUDED_scryfall_Card

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_scryfall_Result
#include <scryfall/Result.h>
#endif
HX_DECLARE_STACK_FRAME(_hx_pos_41fa36b6ebaab841_38_new)
HX_DECLARE_CLASS1(scryfall,Card)
HX_DECLARE_CLASS1(scryfall,Result)

namespace scryfall{


class HXCPP_CLASS_ATTRIBUTES Card_obj : public  ::scryfall::Result_obj
{
	public:
		typedef  ::scryfall::Result_obj super;
		typedef Card_obj OBJ_;
		Card_obj();

	public:
		enum { _hx_ClassId = 0x7996a942 };

		void __construct( ::Dynamic obj);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="scryfall.Card")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"scryfall.Card"); }

		inline static ::hx::ObjectPtr< Card_obj > __new( ::Dynamic obj) {
			::hx::ObjectPtr< Card_obj > __this = new Card_obj();
			__this->__construct(obj);
			return __this;
		}

		inline static ::hx::ObjectPtr< Card_obj > __alloc(::hx::Ctx *_hx_ctx, ::Dynamic obj) {
			Card_obj *__this = (Card_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(Card_obj), true, "scryfall.Card"));
			*(void **)__this = Card_obj::_hx_vtable;
{
            	HX_STACKFRAME(&_hx_pos_41fa36b6ebaab841_38_new)
HXDLIN(  38)		__this->super::__construct(obj);
            	}
		
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~Card_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("Card",f0,49,93,2c); }

		::String get_id();
		::Dynamic get_id_dyn();

		::String get_rarity();
		::Dynamic get_rarity_dyn();

		::Array< ::String > get_colors();
		::Dynamic get_colors_dyn();

		::String get_typeLine();
		::Dynamic get_typeLine_dyn();

		 ::Dynamic get_imageUrls();
		::Dynamic get_imageUrls_dyn();

		virtual ::String toString();
		::Dynamic toString_dyn();

};

} // end namespace scryfall

#endif /* INCLUDED_scryfall_Card */ 

// Generated by Haxe 4.3.2
#ifndef INCLUDED_scryfall_List
#define INCLUDED_scryfall_List

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_scryfall_Result
#include <scryfall/Result.h>
#endif
HX_DECLARE_CLASS1(scryfall,Card)
HX_DECLARE_CLASS1(scryfall,List)
HX_DECLARE_CLASS1(scryfall,Result)

namespace scryfall{


class HXCPP_CLASS_ATTRIBUTES List_obj : public  ::scryfall::Result_obj
{
	public:
		typedef  ::scryfall::Result_obj super;
		typedef List_obj OBJ_;
		List_obj();

	public:
		enum { _hx_ClassId = 0x7f8fa7d0 };

		void __construct( ::Dynamic object);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="scryfall.List")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"scryfall.List"); }
		static ::hx::ObjectPtr< List_obj > __new( ::Dynamic object);
		static ::hx::ObjectPtr< List_obj > __alloc(::hx::Ctx *_hx_ctx, ::Dynamic object);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~List_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("List",7e,48,8c,32); }

		::Array< ::Dynamic> results;
		 ::scryfall::List nextList;
		 ::scryfall::List get_nextList();
		::Dynamic get_nextList_dyn();

};

} // end namespace scryfall

#endif /* INCLUDED_scryfall_List */ 

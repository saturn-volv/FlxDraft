// Generated by Haxe 4.3.2
#ifndef INCLUDED_scryfall_search_cards_QuerySearchResult
#define INCLUDED_scryfall_search_cards_QuerySearchResult

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(scryfall,Card)
HX_DECLARE_CLASS1(scryfall,List)
HX_DECLARE_CLASS1(scryfall,Result)
HX_DECLARE_CLASS3(scryfall,search,cards,QuerySearchResult)

namespace scryfall{
namespace search{
namespace cards{


class HXCPP_CLASS_ATTRIBUTES QuerySearchResult_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef QuerySearchResult_obj OBJ_;
		QuerySearchResult_obj();

	public:
		enum { _hx_ClassId = 0x32f1acc8 };

		void __construct(::String url);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="scryfall.search.cards.QuerySearchResult")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"scryfall.search.cards.QuerySearchResult"); }
		static ::hx::ObjectPtr< QuerySearchResult_obj > __new(::String url);
		static ::hx::ObjectPtr< QuerySearchResult_obj > __alloc(::hx::Ctx *_hx_ctx,::String url);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~QuerySearchResult_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("QuerySearchResult",6d,fd,74,1d); }

		::Array< ::Dynamic> pages;
		::Array< ::Dynamic> getCollection();
		::Dynamic getCollection_dyn();

};

} // end namespace scryfall
} // end namespace search
} // end namespace cards

#endif /* INCLUDED_scryfall_search_cards_QuerySearchResult */ 

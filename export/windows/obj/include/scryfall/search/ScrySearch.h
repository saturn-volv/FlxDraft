// Generated by Haxe 4.3.2
#ifndef INCLUDED_scryfall_search_ScrySearch
#define INCLUDED_scryfall_search_ScrySearch

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(scryfall,Card)
HX_DECLARE_CLASS1(scryfall,List)
HX_DECLARE_CLASS1(scryfall,Result)
HX_DECLARE_CLASS1(scryfall,Set)
HX_DECLARE_CLASS2(scryfall,search,ScrySearch)
HX_DECLARE_CLASS3(scryfall,search,cards,QuerySearchResult)

namespace scryfall{
namespace search{


class HXCPP_CLASS_ATTRIBUTES ScrySearch_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef ScrySearch_obj OBJ_;
		ScrySearch_obj();

	public:
		enum { _hx_ClassId = 0x1dad8839 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="scryfall.search.ScrySearch")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"scryfall.search.ScrySearch"); }

		inline static ::hx::ObjectPtr< ScrySearch_obj > __new() {
			::hx::ObjectPtr< ScrySearch_obj > __this = new ScrySearch_obj();
			__this->__construct();
			return __this;
		}

		inline static ::hx::ObjectPtr< ScrySearch_obj > __alloc(::hx::Ctx *_hx_ctx) {
			ScrySearch_obj *__this = (ScrySearch_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(ScrySearch_obj), false, "scryfall.search.ScrySearch"));
			*(void **)__this = ScrySearch_obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~ScrySearch_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("ScrySearch",3f,7f,28,a3); }

		static  ::scryfall::Set searchSet(::String code);
		static ::Dynamic searchSet_dyn();

		static ::Array< ::Dynamic> getSets();
		static ::Dynamic getSets_dyn();

		static  ::scryfall::Card fuzzySearchCard(::String search, ::Dynamic params);
		static ::Dynamic fuzzySearchCard_dyn();

		static  ::scryfall::Card exactSearchCard(::String search, ::Dynamic params);
		static ::Dynamic exactSearchCard_dyn();

		static  ::scryfall::Card searchCard(::String url, ::Dynamic params);
		static ::Dynamic searchCard_dyn();

		static  ::scryfall::Card randomCard(::String query);
		static ::Dynamic randomCard_dyn();

		static  ::scryfall::search::cards::QuerySearchResult queryCard(::String query, ::Dynamic params);
		static ::Dynamic queryCard_dyn();

		static  ::scryfall::Card getCardFromURL(::String url);
		static ::Dynamic getCardFromURL_dyn();

		static  ::scryfall::List getCardListFromURL(::String url);
		static ::Dynamic getCardListFromURL_dyn();

		static  ::scryfall::List getList(::String url);
		static ::Dynamic getList_dyn();

};

} // end namespace scryfall
} // end namespace search

#endif /* INCLUDED_scryfall_search_ScrySearch */ 

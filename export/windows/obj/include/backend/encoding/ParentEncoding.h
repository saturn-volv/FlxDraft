// Generated by Haxe 4.3.2
#ifndef INCLUDED_backend_encoding_ParentEncoding
#define INCLUDED_backend_encoding_ParentEncoding

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(backend,encoding,ParentEncoding)
HX_DECLARE_CLASS1(haxe,IMap)
HX_DECLARE_CLASS2(haxe,ds,StringMap)

namespace backend{
namespace encoding{


class HXCPP_CLASS_ATTRIBUTES ParentEncoding_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef ParentEncoding_obj OBJ_;
		ParentEncoding_obj();

	public:
		enum { _hx_ClassId = 0x6fd56ee4 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="backend.encoding.ParentEncoding")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"backend.encoding.ParentEncoding"); }

		inline static ::hx::ObjectPtr< ParentEncoding_obj > __new() {
			::hx::ObjectPtr< ParentEncoding_obj > __this = new ParentEncoding_obj();
			__this->__construct();
			return __this;
		}

		inline static ::hx::ObjectPtr< ParentEncoding_obj > __alloc(::hx::Ctx *_hx_ctx) {
			ParentEncoding_obj *__this = (ParentEncoding_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(ParentEncoding_obj), false, "backend.encoding.ParentEncoding"));
			*(void **)__this = ParentEncoding_obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~ParentEncoding_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		static bool __SetStatic(const ::String &inString, Dynamic &ioValue, ::hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("ParentEncoding",3d,1c,86,a2); }

		static void __boot();
		static  ::haxe::ds::StringMap RESERVED_CHARACTERS;
};

} // end namespace backend
} // end namespace encoding

#endif /* INCLUDED_backend_encoding_ParentEncoding */ 

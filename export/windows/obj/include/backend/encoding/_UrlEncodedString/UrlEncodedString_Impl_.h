// Generated by Haxe 4.3.2
#ifndef INCLUDED_backend_encoding__UrlEncodedString_UrlEncodedString_Impl_
#define INCLUDED_backend_encoding__UrlEncodedString_UrlEncodedString_Impl_

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS3(backend,encoding,_UrlEncodedString,UrlEncodedString_Impl_)

namespace backend{
namespace encoding{
namespace _UrlEncodedString{


class HXCPP_CLASS_ATTRIBUTES UrlEncodedString_Impl__obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef UrlEncodedString_Impl__obj OBJ_;
		UrlEncodedString_Impl__obj();

	public:
		enum { _hx_ClassId = 0x5275a1d8 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="backend.encoding._UrlEncodedString.UrlEncodedString_Impl_")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"backend.encoding._UrlEncodedString.UrlEncodedString_Impl_"); }

		inline static ::hx::ObjectPtr< UrlEncodedString_Impl__obj > __new() {
			::hx::ObjectPtr< UrlEncodedString_Impl__obj > __this = new UrlEncodedString_Impl__obj();
			__this->__construct();
			return __this;
		}

		inline static ::hx::ObjectPtr< UrlEncodedString_Impl__obj > __alloc(::hx::Ctx *_hx_ctx) {
			UrlEncodedString_Impl__obj *__this = (UrlEncodedString_Impl__obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(UrlEncodedString_Impl__obj), false, "backend.encoding._UrlEncodedString.UrlEncodedString_Impl_"));
			*(void **)__this = UrlEncodedString_Impl__obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~UrlEncodedString_Impl__obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("UrlEncodedString_Impl_",d0,e4,a7,fb); }

		static ::String _new(::String str);
		static ::Dynamic _new_dyn();

};

} // end namespace backend
} // end namespace encoding
} // end namespace _UrlEncodedString

#endif /* INCLUDED_backend_encoding__UrlEncodedString_UrlEncodedString_Impl_ */ 

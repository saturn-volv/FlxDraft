// Generated by Haxe 4.3.2
#ifndef INCLUDED_server_user_User
#define INCLUDED_server_user_User

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_STACK_FRAME(_hx_pos_5d76755f5c4ae554_6_new)
HX_DECLARE_CLASS2(server,user,User)

namespace server{
namespace user{


class HXCPP_CLASS_ATTRIBUTES User_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef User_obj OBJ_;
		User_obj();

	public:
		enum { _hx_ClassId = 0x228d1679 };

		void __construct(::String username);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="server.user.User")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"server.user.User"); }

		inline static ::hx::ObjectPtr< User_obj > __new(::String username) {
			::hx::ObjectPtr< User_obj > __this = new User_obj();
			__this->__construct(username);
			return __this;
		}

		inline static ::hx::ObjectPtr< User_obj > __alloc(::hx::Ctx *_hx_ctx,::String username) {
			User_obj *__this = (User_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(User_obj), true, "server.user.User"));
			*(void **)__this = User_obj::_hx_vtable;
{
            	HX_STACKFRAME(&_hx_pos_5d76755f5c4ae554_6_new)
HXDLIN(   6)		( ( ::server::user::User)(__this) )->username = username;
            	}
		
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~User_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("User",6b,be,86,38); }

		::String username;
};

} // end namespace server
} // end namespace user

#endif /* INCLUDED_server_user_User */ 

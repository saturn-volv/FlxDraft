// Generated by Haxe 4.3.2
#ifndef INCLUDED_server_user_player_Player
#define INCLUDED_server_user_player_Player

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS4(server,play,board,cards,BoosterPack)
HX_DECLARE_CLASS2(server,user,User)
HX_DECLARE_CLASS3(server,user,player,Player)

namespace server{
namespace user{
namespace player{


class HXCPP_CLASS_ATTRIBUTES Player_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef Player_obj OBJ_;
		Player_obj();

	public:
		enum { _hx_ClassId = 0x74bb0c30 };

		void __construct( ::server::user::User user);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="server.user.player.Player")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"server.user.player.Player"); }
		static ::hx::ObjectPtr< Player_obj > __new( ::server::user::User user);
		static ::hx::ObjectPtr< Player_obj > __alloc(::hx::Ctx *_hx_ctx, ::server::user::User user);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~Player_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("Player",81,5f,4d,6c); }

		 ::server::user::User user;
		::Array< ::Dynamic> boosterPacks;
};

} // end namespace server
} // end namespace user
} // end namespace player

#endif /* INCLUDED_server_user_player_Player */ 
